version: 2
jobs:
  build:
    docker:
      - image: docker:18-git
    environment:
      APP_NAME: "get-access/cla_public"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to contrainer registry
          command: |
            apk add --no-cache --no-progress --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ aws-cli
            login="$(aws ecr get-login --region eu-west-1 --no-include-email)"
            ${login}
      - run:
          name: Build Docker image
          command: |
            docker build --tag $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1 .
            docker tag $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1 $ECR_ENDPOINT/$APP_NAME:$CIRCLE_BRANCH
      - run:
          name: Validate Python version
          command: |
            docker run --rm --tty --interactive $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1 python --version | grep "2.7"
      - run:
          name: Push Docker image
          command: |
            docker push $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1
            docker push $ECR_ENDPOINT/$APP_NAME:$CIRCLE_BRANCH

  test:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: Setup Python environment
          command: |
            pip install virtualenv
            virtualenv env-ci

      - restore_cache:
          keys:
            - pip-v2-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/test.txt" }}
      - run:
          name: Install dependencies
          command: |
            source env-ci/bin/activate
            pip install --requirement requirements.txt --requirement requirements/test.txt
      - save_cache:
          key: pip-v2-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/test.txt" }}
          paths:
            - "~/.cache/pip"

      - run:
          name: Run unit tests
          command: |
            source env-ci/bin/activate
            python manage.py test

  browser-test:
    docker:
      - image: circleci/python:2.7-node-browsers
    steps:
      - checkout
      - run:
          name: Setup Python environment
          command: |
            pip install virtualenv
            virtualenv env-ci

      - restore_cache:
          keys:
            - pip-v2-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/test.txt" }}
      - run:
          name: Install dependencies
          command: |
            source env-ci/bin/activate
            pip install --requirement requirements.txt --requirement requirements/test.txt
      - save_cache:
          key: pip-v2-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/test.txt" }}
          paths:
            - "~/.cache/pip"

      - restore_cache:
          keys:
            - npm-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Install javascript dependencies
          command: |
            npm install
            ./node_modules/.bin/bower install
            npm run update-selenium
      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - "./node_modules"

      - run:
          name: Compile assets
          command: ./node_modules/.bin/gulp

      - run:
          name: Start server
          background: true
          command: |
            source env-ci/bin/activate
            python manage.py runserver
      - run:
          name: Run browser tests
          command: |
            dockerize -wait tcp://localhost:5000
            ./nightwatch -c tests/nightwatch/ci.json --env chrome
      - store_artifacts:
          path: tests/reports


workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - browser-test
      - build:
          requires:
            - test
            - browser-test
