 CLA Public
============

Installation
------------

    pip install -r requirements/local.txt

    npm install && bower install && gulp

Then, copy ``cla_public/config/local.py.example`` and name it ``cla_public/config/local.py``.

Next, you can run the management command like this:

    ./manage.py --help

You can run the server with:

    ./manage.py runserver

*OR*

    tools/start-dev

to run the server with foreman, which will monitor and
automatically reload CSS and JS changes and enables other whizzy things.


Development
-----------

Assets reside in `static-src` directory and compiled in `static` directory upon running build tasks.

CLAP is using [Gulp](http://gulpjs.com/) for build tasks. The following Gulp tasks are used in development:

- `build` builds and minifies all assets and does all of the following
- `lint` runs JS Hint on JS code
- `sass` builds the SCSS and generates source maps
- `serve` watches the files for changes and reloads the browser using [BrowserSync](http://www.browsersync.io/)

If you have [Foreman](https://github.com/ddollar/foreman) installed you can run `./tools/start-server` which will start the CLA Flask server
and run the `gulp serve` process, enabling you to concentrate on the code leaving building and reloading
to `serve` task.


Test
----

To run Python unit tests, use the following:

    ./manage.py test

To run the NIghtwatch automated tests in PhantomJS use:

    make test

To run just the legacy Nightwatch tests (at time of writing, this consists of the threshold tests) use:

    make test-legacy

And to run all the Nightwatch tests use:

    make test-all

See the `Makefile` for other self-explanatory commands.
